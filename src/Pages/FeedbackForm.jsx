import React, { useState } from "react";
import { useForm } from "react-hook-form";
import * as motion from "motion/react-client";

export default function FeedbackForm() {
  const [submitted, setSubmitted] = useState(false);

  const {
    register,
    handleSubmit,
    formState: { errors },
    reset,
  } = useForm();

  const onSubmit = (data) => {
    console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", data);
    setSubmitted(true);
    reset();
  };

  return (
    <>
      <h1 className="text-center user-select-none mb-4">
        –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
      </h1>

      {submitted && (
        <div className="alert alert-success text-center">
          –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üéâ
        </div>
      )}

      <form onSubmit={handleSubmit(onSubmit)}>
        {/* –§–∞–º–∏–ª–∏—è */}
        <div className="mb-3">
          <label className="form-label">–§–∞–º–∏–ª–∏—è</label>
          <input
            {...register("lastName", {
              required: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
              minLength: { value: 3, message: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: 3 —Å–∏–º–≤–æ–ª–∞" },
            })}
            type="text"
            className="form-control"
            placeholder="–§–∞–º–∏–ª–∏—è"
          />
          <div className="form-text text-danger">
            {errors.lastName?.message}
          </div>
        </div>

        {/* –ò–º—è */}
        <div className="mb-3">
          <label className="form-label">–ò–º—è</label>
          <input
            {...register("firstName", {
              required: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
              minLength: { value: 2, message: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: 2 —Å–∏–º–≤–æ–ª–∞" },
            })}
            type="text"
            className="form-control"
            placeholder="–ò–º—è"
          />
          <div className="form-text text-danger">
            {errors.firstName?.message}
          </div>
        </div>

        {/* –û—Ç—á–µ—Å—Ç–≤–æ */}
        <div className="mb-3">
          <label className="form-label">–û—Ç—á–µ—Å—Ç–≤–æ</label>
          <input
            {...register("middleName")}
            type="text"
            className="form-control"
            placeholder="–û—Ç—á–µ—Å—Ç–≤–æ"
          />
          <div className="form-text text-danger">
            {errors.middleName?.message}
          </div>
        </div>

        {/* Email */}
        <div className="mb-3">
          <label className="form-label">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</label>
          <input
            {...register("email", {
              required: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
              pattern: {
                value: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
                message: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email",
              },
            })}
            type="email"
            className="form-control"
            placeholder="Email"
          />
          <div className="form-text text-danger">{errors.email?.message}</div>
        </div>

        <div className="mb-3 text-center">
          <motion.button
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.95 }}
            className="btn btn-outline-primary"
            type="submit"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </motion.button>
        </div>
      </form>
    </>
  );
}
